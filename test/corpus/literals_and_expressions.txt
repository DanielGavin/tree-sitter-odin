======================
Empty package
======================

package pkgname

---

(source_file 
  (package_clause
    (package_identifier)))


=======================
Package imports
=======================

package pkgname

import foo "core:foo"
import "core:bar"

---

(source_file 
  (package_clause
    (package_identifier))
  (import_declaration
    name: (package_identifier)
    path: (interpreted_string_literal))
  (import_declaration
    path: (interpreted_string_literal)))


========================================
Declaration and assignment expressions
========================================

package pkgname

a: int
b := "some \"escaped\" string"
c : int = 10
d, e :: 4, 5
a_somewhat_long_identifier := a

---

(source_file 
  (package_clause
    (package_identifier))
  (var_declaration
    name: (identifier)
    type: (type_identifier))
  (var_declaration
    name: (identifier)
    value: (interpreted_string_literal 
    (escape_sequence) 
    (escape_sequence)))
  (var_declaration
    name: (identifier)
    type: (type_identifier)
    value: (int_literal))
  (const_declaration
    name: (identifier)
    name: (identifier)
    value: (int_literal)
    value: (int_literal))
  (var_declaration
    name: (identifier)
    value: (identifier)))


=========================
Procedure signatures
=========================

package pkgname

foo :: #type proc (a: int, b : string = "") -> int
foo :: #type proc () -> (int, int)

---

(source_file
  (package_clause
    (package_identifier))
  (const_declaration
    name: (identifier)
    value: (unambiguous_type
     (proc_type
       parameters: (parameter_list
           (parameter_declaration
             name: (identifier)
             type: (type_identifier))
           (parameter_declaration
             name: (identifier)
             type: (type_identifier)
             value: (interpreted_string_literal)))
       result: (type_identifier))))
  (const_declaration
    name: (identifier)
    value: (unambiguous_type
     (proc_type
       parameters: (parameter_list)
       result: (parameter_list
         (parameter_declaration type: (type_identifier))
         (parameter_declaration type: (type_identifier)))))))
